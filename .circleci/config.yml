version: 2.1

aliases:
  - &restore-yarn-cache
    key: v2-yarn-cache-{{ checksum "yarn.lock" }}

  - &save-yarn-cache
    paths:
      - ~/.yarn/berry/cache
    key: v2-yarn-cache-{{ checksum "yarn.lock" }}

  - &artifact_pptx
    path: ~/pptx-renderer/packages/renderer/pptx-renderer.min.js

  - &artifact_pptx_min
    path: ~/pptx-renderer/packages/renderer/pptx-renderer.min.js

   

executors:
  node-executor:
    docker:
      - image: cimg/node:current
    working_directory: ~/pptx-renderer
   

jobs:
  test-standalone:
    executor: node-executor
    steps:
      - checkout
      - restore_cache: *restore-yarn-cache
        # Builds babel-standalone with the regular Babel config
        # data for a JS file that's several megabytes large is bound to fail. Here,
        # we just run the babel-standalone test separately.
      - run: yarn test
      - store_artifacts: *artifact_pptx
      - store_artifacts: *artifact_pptx_min
      - save_cache: *save-yarn-cache
  eslint:
     executor: node-executor
     steps:
      - checkout
      - restore_cache: *restore-yarn-cache
      - run: yarn lint
      - save_cache: *save-yarn-cache


 

workflows:
  version: 2
  test-standalone:
    jobs:
      - test-standalone 
  eslint:
    jobs: 
      - eslint
